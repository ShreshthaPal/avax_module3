// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;



contract MODULE3 {

    string public tokenName = "SHRESHTHA";
    string public abbrv = "PAL";
    uint public totalSupply = 0;
    
    mapping (address=> uint) public balances;
    address public owner;

    event Transfer(address indexed from, address indexed to, uint value);
    event Burn(address indexed burner, uint value);

    function mint(address _address, uint _value) public 
    {
        totalSupply += _value;
        balances[_address] += _value;  

    }

    function burn( address _address,uint _value) public 
    {
        if( balances[_address] >= _value)
        {
            totalSupply -= _value;
            balances[_address] -= _value;
        }
        
    }
     // Transfer function
    function transfer(address _to, uint _value) public {
        require(_to != address(0), "Invalid address");
        require(balances[msg.sender] >= _value, "Insufficient balance");
        
        balances[msg.sender] = balances[msg.sender] - _value;
        balances[_to] = balances[_to] + _value;
        emit Transfer(msg.sender, _to, _value);
    }

}
